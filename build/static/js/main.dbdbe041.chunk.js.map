{"version":3,"sources":["components/Button.js","components/ButtonPanel.js","components/Display.js","logic/operate.js","logic/calculate.js","components/App.js","index.js"],"names":["Button","ButtonName","color","wide","type","className","defaultProps","ButtonPanel","renderButton","name","includes","Display","output","operate","numberOne","numberTwo","operation","operand1","Big","operand2","plus","minus","times","div","toPrecision","calculate","dataObj","buttonName","total","next","concat","toString","App","onClick","display","document","querySelector","createElement","setAttribute","innerHTML","insertAdjacentElement","setTimeout","remove","ReactDOM","render","StrictMode","getElementById"],"mappings":"wKAEMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,KAAtB,OACb,wBACEC,KAAK,SACLC,UAAWH,GAASC,EAAO,cAAgB,gBAF7C,SAIGF,KAILD,EAAOM,aAAe,CACpBL,WAAY,IACZC,MAAO,UACPC,MAAM,GASOH,QCsBAO,EA3CK,WAClB,IAAMC,EAAe,SAAAC,GAAI,OACvB,cAAC,EAAD,CACER,WAAYQ,EACZP,MAAO,CAAC,OAAK,IAAK,IAAK,IAAK,KAAKQ,SAASD,GAAQ,oBAAsB,WACxEN,KAAe,MAATM,KAGV,OACE,sBAAKJ,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACIG,EAAa,MACbA,EAAa,OACbA,EAAa,KACbA,EAAa,WAEjB,sBAAKH,UAAU,YAAf,UACIG,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,QAEjB,sBAAKH,UAAU,YAAf,UACIG,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,QAEjB,sBAAKH,UAAU,YAAf,UACIG,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,QAEjB,sBAAKH,UAAU,YAAf,UACIG,EAAa,KACbA,EAAa,KACbA,EAAa,YCrCjBG,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACd,qBAAKP,UAAU,iBAAf,SACGO,KAILD,EAAQL,aAAe,CACrBM,OAAQ,KAOKD,Q,gBCuBAE,EArCC,SAACC,EAAWC,EAAWC,GACrC,IAEIJ,EAFEK,EAAW,IAAIC,IAAIJ,GACnBK,EAAW,IAAID,IAAIH,GAEzB,OAAQC,GACN,IAAK,IACHJ,EAASK,EAASG,KAAKD,GACvB,MACF,IAAK,IACHP,EAASK,EAASI,MAAMF,GACxB,MACF,IAAK,IACHP,EAASK,EAASK,MAAMH,GACxB,MACF,IAAK,OACe,IAAdJ,IACFH,EAASK,EAASM,IAAIJ,IAExBP,EAAS,oBACT,MACF,IAAK,IACHA,EAASG,EAAYI,EAASI,IAAI,KAAKC,YAAY,IAAMP,EAASM,IAAI,KAAKC,YAAY,IAK3F,MAAkB,MAAdR,EACKJ,EACW,SAAdI,EACc,IAAdD,EACKH,EAAOY,YAAY,GAErBZ,EAEFA,EAAOY,YAAY,ICDbC,EAjCG,SAACC,EAASC,GAAgB,IACpCC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,KAAMb,EAAcU,EAAdV,UACnB,OAAQW,GACN,IAAK,OACCC,GAASC,KACXD,IAAU,EACVC,IAAS,GAEX,MACF,IAAK,KACHD,EAAQ,IACRC,EAAO,GACPb,EAAY,KACZ,MACF,IAAK,IACCY,IAAUC,EACZD,EAAME,OAAO,KACJD,GACTA,EAAKE,WAAWD,OAAO,KAO7B,MAAI,CAAC,IAAK,IAAK,IAAK,OAAK,IAAK,KAAKpB,SAASiB,GAC1CC,EAAQf,EAAQe,EAAOC,EAAMb,GAIxB,CAAEY,QAAOC,OAAMb,cCFTgB,MA1Bf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,wBACE5B,KAAK,SACL6B,QAAS,WACPR,EAAU,CAAEG,MAAO,EAAGC,KAAM,EAAGb,UAAW,KAAO,KACjD,IAAMkB,EAAUC,SAASC,cAAc,mBACjCb,EAAMY,SAASE,cAAc,OACnCd,EAAIe,aAAa,QAAS,sEAC1Bf,EAAIgB,UAAY,sBAChBL,EAAQM,sBAAsB,cAAejB,GAE7CkB,YAAW,WACTlB,EAAImB,WACH,MAZP,iCCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASW,eAAe,U","file":"static/js/main.dbdbe041.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ ButtonName, color, wide }) => (\n  <button\n    type=\"button\"\n    className={color + (wide ? ' double-btn' : ' default-btn')}\n  >\n    {ButtonName}\n  </button>\n);\n\nButton.defaultProps = {\n  ButtonName: ' ',\n  color: '#f5913e',\n  wide: false,\n};\n\nButton.propTypes = {\n  ButtonName: PropTypes.string,\n  color: PropTypes.string,\n  wide: PropTypes.bool,\n};\n\nexport default Button;\n","import Button from './Button';\n\nconst ButtonPanel = () => {\n  const renderButton = name => (\n    <Button\n      ButtonName={name}\n      color={['÷', 'x', '-', '+', '='].includes(name) ? 'default-btn-color' : 'grey-btn'}\n      wide={name === '0'}\n    />\n  );\n  return (\n    <div className=\"btn-panel\">\n      <div className=\"btn-group\">\n        { renderButton('AC')}\n        { renderButton('+/-')}\n        { renderButton('%')}\n        { renderButton('÷')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('7')}\n        { renderButton('8')}\n        { renderButton('9')}\n        { renderButton('x')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('4')}\n        { renderButton('5')}\n        { renderButton('6')}\n        { renderButton('-')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('1')}\n        { renderButton('2')}\n        { renderButton('3')}\n        { renderButton('+')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('0')}\n        { renderButton('.')}\n        { renderButton('=')}\n      </div>\n    </div>\n  );\n};\n\nexport default ButtonPanel;\n","import PropTypes from 'prop-types';\n\nconst Display = ({ output }) => (\n  <div className=\"display-window\">\n    {output}\n  </div>\n);\n\nDisplay.defaultProps = {\n  output: '0',\n};\n\nDisplay.propTypes = {\n  output: PropTypes.string,\n};\n\nexport default Display;\n","import Big from 'big.js';\n\nconst operate = (numberOne, numberTwo, operation) => {\n  const operand1 = new Big(numberOne);\n  const operand2 = new Big(numberTwo);\n  let output;\n  switch (operation) {\n    case '+':\n      output = operand1.plus(operand2);\n      break;\n    case '-':\n      output = operand1.minus(operand2);\n      break;\n    case 'x':\n      output = operand1.times(operand2);\n      break;\n    case '÷':\n      if (numberTwo !== 0) {\n        output = operand1.div(operand2);\n      }\n      output = 'Cannot calculate!';\n      break;\n    case '%':\n      output = numberTwo ? operand2.div(100).toPrecision(10) : operand1.div(100).toPrecision(10);\n      break;\n    default:\n      break;\n  }\n  if (operation === '%') {\n    return output;\n  } if (operation === '÷') {\n    if (numberTwo !== 0) {\n      return output.toPrecision(4);\n    }\n    return output;\n  }\n  return output.toPrecision(1);\n};\n\nexport default operate;\n","import operate from './operate';\n\nconst calculate = (dataObj, buttonName) => {\n  let { total, next, operation } = dataObj;\n  switch (buttonName) {\n    case '+/-':\n      if (total || next) {\n        total *= -1;\n        next *= -1;\n      }\n      break;\n    case 'AC':\n      total = '0';\n      next = '';\n      operation = null;\n      break;\n    case '.':\n      if (total && !next) {\n        total.concat('.');\n      } else if (next) {\n        next.toString().concat('.');\n      }\n      break;\n    default:\n      break;\n  }\n\n  if (['+', '-', 'x', '÷', '%', '='].includes(buttonName)) {\n    total = operate(total, next, operation);\n    return total;\n  }\n\n  return { total, next, operation };\n};\n\nexport default calculate;\n","import ButtonPanel from './ButtonPanel';\nimport Display from './Display';\nimport calculate from '../logic/calculate';\n\nfunction App() {\n  return (\n    <>\n      <Display />\n      <ButtonPanel />\n      <button\n        type=\"button\"\n        onClick={() => {\n          calculate({ total: 1, next: 0, operation: '+' }, '=');\n          const display = document.querySelector('.display-window');\n          const div = document.createElement('div');\n          div.setAttribute('style', 'font-size: 24px; width: max-content; margin: 0 auto; color: green;');\n          div.innerHTML = 'Just a placeholder!';\n          display.insertAdjacentElement('beforebegin', div);\n\n          setTimeout(() => {\n            div.remove();\n          }, 2000);\n        }}\n      >\n        PlaceHolder Btn\n      </button>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}