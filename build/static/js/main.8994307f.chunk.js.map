{"version":3,"sources":["components/Button.js","components/ButtonPanel.js","components/Display.js","logic/operate.js","logic/calculate.js","components/App.js","index.js"],"names":["Button","ButtonName","color","wide","clickHandler","type","className","onClick","defaultProps","ButtonPanel","renderButton","name","includes","Display","output","nxt","opr","operate","numberOne","numberTwo","operation","Big","DP","operand1","operand2","plus","minus","times","div","calculate","dataObj","buttonName","total","next","toString","alert","document","createElement","innerHTML","setAttribute","classList","add","body","insertAdjacentElement","setTimeout","querySelector","remove","App","props","state","handleClick","bind","dataObjCopy","this","Number","isNaN","parseInt","setState","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"yOAEMA,EAAS,SAAC,GAAD,IACbC,EADa,EACbA,WAAYC,EADC,EACDA,MAAOC,EADN,EACMA,KAAMC,EADZ,EACYA,aADZ,OAGb,wBACEC,KAAK,SACLC,UAAWJ,GAASC,EAAO,cAAgB,gBAC3CI,QAAS,kBAAMH,EAAaH,IAH9B,SAKGA,KAILD,EAAOQ,aAAe,CACpBP,WAAY,IACZC,MAAO,UACPC,MAAM,GAUOH,QCwBAS,EAhDK,SAAC,GAAsB,IAApBL,EAAmB,EAAnBA,aACfM,EAAe,SAAAC,GAAI,OACvB,cAAC,EAAD,CACEV,WAAYU,EACZT,MAAO,CAAC,OAAK,IAAK,IAAK,IAAK,KAAKU,SAASD,GAAQ,oBAAsB,WACxER,KAAe,MAATQ,EACNP,aAAc,kBAAMA,EAAaO,OAGrC,OACE,sBAAKL,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACII,EAAa,MACbA,EAAa,OACbA,EAAa,KACbA,EAAa,WAEjB,sBAAKJ,UAAU,YAAf,UACII,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,QAEjB,sBAAKJ,UAAU,YAAf,UACII,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,QAEjB,sBAAKJ,UAAU,YAAf,UACII,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,QAEjB,sBAAKJ,UAAU,YAAf,UACII,EAAa,KACbA,EAAa,KACbA,EAAa,YCvCjBG,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,IAAKC,EAAhB,EAAgBA,IAAhB,OACd,sBAAKV,UAAU,iBAAf,UACGQ,EACQ,MAARE,EAAc,GAAKA,EACnBD,MAILF,EAAQL,aAAe,CACrBM,OAAQ,IACRC,IAAK,GACLC,IAAK,IASQH,Q,gBCQAI,EA5BC,SAACC,EAAWC,EAAWC,GACrCC,IAAIC,GAAK,GACT,IAEIR,EAFES,EAAW,IAAIF,IAAIH,GACnBM,EAAW,IAAIH,IAAIF,GAEzB,OAAQC,GACN,IAAK,IACHN,EAASS,EAASE,KAAKD,GACvB,MACF,IAAK,IACHV,EAASS,EAASG,MAAMF,GACxB,MACF,IAAK,IACHV,EAASS,EAASI,MAAMH,GACxB,MACF,IAAK,OAEDV,EADgB,MAAdK,EACOI,EAASK,IAAIJ,GAEb,sBAMf,OAAOV,GCkCMe,EA3DG,SAACC,EAASC,GAAgB,IACpCC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,KAAMb,EAAcU,EAAdV,UACnB,OAAQW,GACN,IAAK,MACCC,IAAUC,EACZD,EAAQf,EAAQe,GAAQ,EAAG,KAClBC,IACTA,EAAOhB,GAAS,EAAGgB,EAAM,MAE3B,MACF,IAAK,KACHD,EAAQ,KACRC,EAAO,KACPb,EAAY,KACZ,MACF,IAAK,IACCY,IAAUC,EACZD,GAAS,IACAC,IACTA,GAAQ,KAEV,MACF,IAAK,IACW,OAAVD,EACFA,EAAQ,KACCA,IAAUA,EAAME,WAAWtB,SAAS,OAC7CoB,GAAS,MAENC,GAAQD,GAASZ,EACpBa,EAAO,KACEA,IAASA,EAAKrB,SAAS,OAChCqB,GAAQ,KAOd,GAAmB,MAAfF,GAAsBC,GAASC,EAAM,CAEvC,GAAc,yBADdD,EAAQf,EAAQe,EAAOC,EAAMb,IACQ,CACnCY,EAAQ,KACR,IAAMG,EAAQC,SAASC,cAAc,OACrCF,EAAMG,UAAY,sBAClBH,EAAMI,aACJ,QAAS,8EAEXJ,EAAMK,UAAUC,IAAI,SACpBL,SAASM,KAAKC,sBAAsB,aAAcR,GAClDS,YAAW,WACTR,SAASS,cAAc,aAAaC,WACnC,KAELb,EAAO,KACPb,EAAY,KAEd,MAAO,CAAEY,QAAOC,OAAMb,cCST2B,E,kDA7Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXnB,QAAS,CACPE,MAAO,KACPC,KAAM,KACNb,UAAW,OAGf,EAAK8B,YAAc,EAAKA,YAAYC,KAAjB,gBATF,E,+CAYnB,SAAYpB,GACV,IACMqB,EADS,eAAQC,KAAKJ,OACEnB,QAG1BwB,OAAOC,MAAMC,SAASzB,EAAY,MAAuB,MAAfA,GAAqC,MAAfA,GAFpD,CAAC,MAAO,KAGTnB,SAASmB,KACpBqB,EAAYhC,UAAYW,GAEA,OAAtBqB,EAAYpB,QACdoB,EAAYpB,MAAQ,MAEyB,kBAA9BwB,SAASzB,EAAY,KAAoC,MAAfA,GAAqC,MAAfA,IACnD,OAA1BqB,EAAYhC,UACW,OAArBgC,EAAYnB,KACdmB,EAAYnB,KAAOF,EAEnBqB,EAAYnB,MAAQF,EAES,OAAtBqB,EAAYpB,MACrBoB,EAAYpB,MAAQD,EACW,OAAtBqB,EAAYpB,QACc,kBAAvBoB,EAAYpB,MACtBoB,EAAYpB,MAAQD,EAEpBqB,EAAYpB,OAASD,IAI3BsB,KAAKI,SAAS,CAAE3B,QAASD,EAAUuB,EAAarB,O,oBAGlD,WAAU,IACAD,EAAYuB,KAAKJ,MAAjBnB,QACFf,EAAMe,EAAQG,KACdjB,EAAMc,EAAQV,UACpB,OACE,qCACE,cAAC,EAAD,CACEN,OAA0B,OAAlBgB,EAAQE,MAAiB,IAAMF,EAAQE,MAAME,WACrDnB,IAAa,OAARA,EAAe,GAAKA,EAAImB,WAC7BlB,IAAa,OAARA,EAAe,GAAKA,EAAIkB,aAE/B,cAAC,EAAD,CAAa9B,aAAciD,KAAKH,qB,GAxDtBQ,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,W","file":"static/js/main.8994307f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({\n  ButtonName, color, wide, clickHandler,\n}) => (\n  <button\n    type=\"button\"\n    className={color + (wide ? ' double-btn' : ' default-btn')}\n    onClick={() => clickHandler(ButtonName)}\n  >\n    {ButtonName}\n  </button>\n);\n\nButton.defaultProps = {\n  ButtonName: ' ',\n  color: '#f5913e',\n  wide: false,\n};\n\nButton.propTypes = {\n  ButtonName: PropTypes.string,\n  color: PropTypes.string,\n  wide: PropTypes.bool,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst ButtonPanel = ({ clickHandler }) => {\n  const renderButton = name => (\n    <Button\n      ButtonName={name}\n      color={['รท', 'x', '-', '+', '='].includes(name) ? 'default-btn-color' : 'grey-btn'}\n      wide={name === '0'}\n      clickHandler={() => clickHandler(name)}\n    />\n  );\n  return (\n    <div className=\"btn-panel\">\n      <div className=\"btn-group\">\n        { renderButton('AC')}\n        { renderButton('+/-')}\n        { renderButton('%')}\n        { renderButton('รท')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('7')}\n        { renderButton('8')}\n        { renderButton('9')}\n        { renderButton('x')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('4')}\n        { renderButton('5')}\n        { renderButton('6')}\n        { renderButton('-')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('1')}\n        { renderButton('2')}\n        { renderButton('3')}\n        { renderButton('+')}\n      </div>\n      <div className=\"btn-group\">\n        { renderButton('0')}\n        { renderButton('.')}\n        { renderButton('=')}\n      </div>\n    </div>\n  );\n};\n\nButtonPanel.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonPanel;\n","import PropTypes from 'prop-types';\n\nconst Display = ({ output, nxt, opr }) => (\n  <div className=\"display-window\">\n    {output}\n    {opr === '%' ? '' : opr}\n    {nxt}\n  </div>\n);\n\nDisplay.defaultProps = {\n  output: '0',\n  nxt: '',\n  opr: '',\n};\n\nDisplay.propTypes = {\n  output: PropTypes.string,\n  nxt: PropTypes.string,\n  opr: PropTypes.string,\n};\n\nexport default Display;\n","import Big from 'big.js';\n\nconst operate = (numberOne, numberTwo, operation) => {\n  Big.DP = 10;\n  const operand1 = new Big(numberOne);\n  const operand2 = new Big(numberTwo);\n  let output;\n  switch (operation) {\n    case '+':\n      output = operand1.plus(operand2);\n      break;\n    case '-':\n      output = operand1.minus(operand2);\n      break;\n    case 'x':\n      output = operand1.times(operand2);\n      break;\n    case 'รท':\n      if (numberTwo !== '0') {\n        output = operand1.div(operand2);\n      } else {\n        output = 'Cannot divide by 0!';\n      }\n      break;\n    default:\n      break;\n  }\n  return output;\n};\n\nexport default operate;\n","import operate from './operate';\n\nconst calculate = (dataObj, buttonName) => {\n  let { total, next, operation } = dataObj;\n  switch (buttonName) {\n    case '+/-':\n      if (total && !next) {\n        total = operate(total, -1, 'x');\n      } else if (next) {\n        next = operate(-1, next, 'x');\n      }\n      break;\n    case 'AC':\n      total = null;\n      next = null;\n      operation = null;\n      break;\n    case '%':\n      if (total && !next) {\n        total /= 100;\n      } else if (next) {\n        next /= 100;\n      }\n      break;\n    case '.':\n      if (total === null) {\n        total = '0.';\n      } else if (total && !total.toString().includes('.')) {\n        total += '.';\n      }\n      if (!next && total && operation) {\n        next = '0.';\n      } else if (next && !next.includes('.')) {\n        next += '.';\n      }\n      break;\n    default:\n      break;\n  }\n\n  if (buttonName === '=' && total && next) {\n    total = operate(total, next, operation);\n    if (total === 'Cannot divide by 0!') {\n      total = null;\n      const alert = document.createElement('div');\n      alert.innerHTML = 'Cannot divide by 0!';\n      alert.setAttribute(\n        'style', 'background-color: rgba(255, 68, 34, 0.3; max-width: 700px; margin: 0 auto;',\n      );\n      alert.classList.add('alert');\n      document.body.insertAdjacentElement('afterBegin', alert);\n      setTimeout(() => {\n        document.querySelector('div.alert').remove();\n      }, 2000);\n    }\n    next = null;\n    operation = null;\n  }\n  return { total, next, operation };\n};\n\nexport default calculate;\n","import React from 'react';\nimport ButtonPanel from './ButtonPanel';\nimport Display from './Display';\nimport calculate from '../logic/calculate';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataObj: {\n        total: null,\n        next: null,\n        operation: null,\n      },\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(buttonName) {\n    const stateCopy = { ...this.state };\n    const dataObjCopy = stateCopy.dataObj;\n    const mutants = ['+/-', '%'];\n\n    if (Number.isNaN(parseInt(buttonName, 10)) && buttonName !== '=' && buttonName !== '.') {\n      if (!mutants.includes(buttonName)) {\n        dataObjCopy.operation = buttonName;\n      }\n      if (dataObjCopy.total === null) {\n        dataObjCopy.total = '0';\n      }\n    } else if (typeof (parseInt(buttonName, 10)) === 'number' && buttonName !== '=' && buttonName !== '.') { // this gives me the number buttons\n      if (dataObjCopy.operation !== null) {\n        if (dataObjCopy.next === null) {\n          dataObjCopy.next = buttonName;\n        } else {\n          dataObjCopy.next += buttonName;\n        }\n      } else if (dataObjCopy.total === null) {\n        dataObjCopy.total = buttonName;\n      } else if (dataObjCopy.total !== null) {\n        if (typeof (dataObjCopy.total) === 'object') {\n          dataObjCopy.total = buttonName;\n        } else {\n          dataObjCopy.total += buttonName;\n        }\n      }\n    }\n    this.setState({ dataObj: calculate(dataObjCopy, buttonName) });\n  }\n\n  render() {\n    const { dataObj } = this.state;\n    const nxt = dataObj.next;\n    const opr = dataObj.operation;\n    return (\n      <>\n        <Display\n          output={dataObj.total === null ? '0' : dataObj.total.toString()}\n          nxt={nxt === null ? '' : nxt.toString()}\n          opr={opr === null ? '' : opr.toString()}\n        />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}